{"data":{"site":{"siteMetadata":{"title":"devLog","author":"Junho Baik"}},"markdownRemark":{"id":"/Users/junhobaik/Development/junhobaik.github.io/_posts/2017/2017-08-10-js-es6-class.md absPath of file >>> MarkdownRemark","html":"<p>자바스크립트에도 이번 ES6에서 Class라는 키워드가 생겼다.</p>\n<p>아래는 기존 자바스크립트의 코드이다.</p>\n<pre><code class=\"language-javascript\">function myInfo(name) {\n    this.name = name;\n}\n\nmyInfo.prototype.showName = function(){\n    console.log(\"My name is \"+ this.name);\n}\n\nconst baik = new myInfo(\"Junho\");\nbaik.showName(); // \"My name is Junho\"\n</code></pre>\n<p>아래는 Class를 활용한 코드이다.</p>\n<pre><code class=\"language-javascript\">class myInfo {\n  constructor(name){\n    this.name = name;\n  }\n  \n  showName() {\n    console.log(\"My name is \"+ this.name);\n  }\n}\n\nconst baik = new myInfo(\"Junho\");\nbaik.showName(); //\"My name is Junho\"\n</code></pre>\n<p>위와 같이 클래스로 똑같은 코드를 구현할 수 있다. 하지만 그렇다고 클래스라는 것이 완전히 새로 생긴 것이 아니고 위와 같이 했더라도 내부적으로는 함수, 프로토타입을 통해 작동하는 것이다.</p>\n<pre><code class=\"language-javascript\">console.log(toString.call(myInfo)); //[object Function]\n</code></pre>\n<p>이번에 ES6에서 편의와 가독성을 위해 class라는 키워드가 생긴 것이라고 볼 수 있다.</p>\n<hr>\n<h2>reference</h2>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/es6-%ea%b0%95%ec%a2%8c-%ec%9e%90%eb%b0%94%ec%8a%a4%ed%81%ac%eb%a6%bd%ed%8a%b8/\">모던 자바스크립트(javascript) 개발을 위한 ES6 강좌</a></li>\n</ul>","frontmatter":{"title":"자바스크립트 ES6 클래스(Class)","date":"August 10, 2017"}}},"pageContext":{"slug":"/js-es6-class/","previous":{"fields":{"slug":"/js-es6-object-assign/"},"frontmatter":{"title":"자바스크립트 ES6 Object.assign","tags":["javascript","ES6"]}},"next":{"fields":{"slug":"/js-es6-setprototypeof/"},"frontmatter":{"title":"자바스크립트 ES6 Object setPrototypeOf","tags":["javascript","ES6"]}}}}