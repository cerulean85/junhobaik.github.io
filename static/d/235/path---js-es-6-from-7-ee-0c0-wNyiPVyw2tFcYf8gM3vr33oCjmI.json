{"data":{"site":{"siteMetadata":{"title":"devLog","author":"Junho Baik"}},"markdownRemark":{"id":"/Users/junhobaik/Development/junhobaik.github.io/_posts/2017/2017-06-29-js-es6-from.md absPath of file >>> MarkdownRemark","html":"<p>Javascript에서는 배열로 보이지만 정작 배열이 아닌 형태의 것들이 존재한다.</p>\n<p>예로 메소드로 전달되는 인자들을 활용하는 arguments 객체같은 경우에도 배열같아보이지만 실제 배열은 아니다.\n따라서, map과 같은 배열을 다루는 메소드를 활용할 수 없는데 이러한 가짜 배열을 진짜배열로 바꿔주는 것을 from 이 해주게 된다.</p>\n<pre><code class=\"language-javascript\">function toArray(array){\n  const len = array.length;\n  const temp = [];\n  \n  for(let i=0; i&#x3C;len; i++){\n    temp.push(array[i]);\n  }\n  \n  return temp;\n}\n\nfunction toArray2(array){\n  return array.map(function(value){\n    return value;\n  })\n}\n\n\nfunction foo() {\n  \n  console.log(toString.call(arguments)); \n  // [object Arguments]\n  \n  console.log(toArray(arguments));\n  // [1, 2, 3, 4, 5]\n  \n  //console.log(toArray2(arguments));\n  // map 사용시 배열이 아니기 떄문에 오류 발생\n  \n  /*************************************/\n  \n  let newArray = Array.from(arguments);\n  \n  console.log(toString.call(newArray));\n  // [object Array]\n  \n  console.log(toArray(newArray));\n  // [1, 2, 3, 4, 5]\n  \n  console.log(toArray2(newArray));\n  // [1, 2, 3, 4, 5]\n}\n\nfoo(1,2,3,4,5);\n</code></pre>\n<p>위 코드에서 toArray2 메소드는 map을 활용하여 배열을 반환한다.</p>\n<p>하지만 arguments를 인자로 전달했을때는 에러가 발생하는 것을 볼 수 있다.</p>","frontmatter":{"title":"자바스크립트 ES6 from","date":"June 29, 2017"}}},"pageContext":{"slug":"/js-es6-from/","previous":{"fields":{"slug":"/js-es6-spread-operator/"},"frontmatter":{"title":"자바스크립트 ES6 Spread operator, 펼침 연산자","tags":["javascript","ES6"]}},"next":{"fields":{"slug":"/js-es6-arrow-function/"},"frontmatter":{"title":"자바스크립트 ES6 Arrow Function","tags":["javascript","ES6"]}}}}