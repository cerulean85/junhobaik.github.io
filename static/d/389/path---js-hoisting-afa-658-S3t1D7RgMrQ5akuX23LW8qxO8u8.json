{"data":{"site":{"siteMetadata":{"title":"devLog","author":"Junho Baik"}},"markdownRemark":{"id":"/Users/junhobaik/Development/junhobaik.github.io/_posts/2017/2017-12-30-js-hoisting.md absPath of file >>> MarkdownRemark","html":"<p>Hoist는 \"끌어올리다\"라는 뜻을 가지고 있다.<br>\n자바스크립트 엔진은 코드를 실행하기 전에 코드 전체를 살펴본다.<br>\n이 과정에서 선언된 내용이 있는지 '선언'을 살펴본다.<br>\n그리고 그 '선언'된 내용들을 모두 호이스팅. 즉, 끌어올리게 된다.  </p>\n<p>아래 코드를 보자.</p>\n<pre><code class=\"language-javascript\">console.log(a());\nconsole.log(b);\nconsole.log(c());\nfunction a() {\n  return 'a';\n}\nvar b = 'b';\nvar c = function(){\n  return 'c';\n}\n</code></pre>\n<p>일반적인 생각으로 코드가 라인 순서대로 실행된다면,\n1번 라인에서부터 함수 a가 선언되기 전이므로 a가 없어 오류가 발생해야한다.\n하지만 위에서 설명한 호이스팅에 따라서 결론적으로 실행되는 코드는 아래와 같게 된다.</p>\n<pre><code class=\"language-javascript\">function a() {\n  return 'a';\n}\nvar b;\nvar c;\nconsole.log(a());\nconsole.log(b);\nconsole.log(c());\nb = 'b';\nc = function(){\n  return 'c';\n}\n</code></pre>\n<p><strong>함수 선언문 a는 통째로 끌어올려졌다.</strong>\n기본 값이 담긴 변수 b와 함수 표현식 c는 선언만 끌어올려졌다.\n할당은 호이스팅의 해당 사항이 아니다.\nb와 c는 선언과 할당이 동시에 이루어진 것으로 분리되어 선언만 호이스팅 된 것이다.</p>\n<p>따라서 위의 코드에서는 에러가 하나 발생하게 된다.</p>\n<pre><code class=\"language-javascript\">a\nundefined\nUncaught TypeError: c is not a function\n</code></pre>\n<p><code>console.log(a())</code>는 정상적으로 출력되어 'a'가 출력되었고,\n<code>console.log(b)</code>는 <code>var b</code>의 선언만이 호이스팅 되었으므로 undefined가 출력,\n<code>console.log(c())</code>는 <code>var c</code>의 선언만이 있고 함수 호출을 하였으므로 함수가 아니라는 오류가 발생하게 된다.</p>","frontmatter":{"title":"자바스크립트 호이스팅(Hoisting)","date":"December 30, 2017"}}},"pageContext":{"slug":"/js-hoisting/","previous":{"fields":{"slug":"/js-react-apply-sass/"},"frontmatter":{"title":"React 프로젝트에 SASS 적용하기","tags":["react","javascript","sass"]}},"next":{"fields":{"slug":"/git-alias/"},"frontmatter":{"title":"Git, Alias(별칭)를 이용하여 편리하게 명령어 사용하기","tags":["git"]}}}}