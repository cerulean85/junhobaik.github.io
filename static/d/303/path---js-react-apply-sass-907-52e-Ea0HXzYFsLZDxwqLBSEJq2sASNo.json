{"data":{"site":{"siteMetadata":{"title":"devLog","author":"Junho Baik"}},"markdownRemark":{"id":"/Users/junhobaik/Development/junhobaik.github.io/_posts/2017/2017-11-08-js-react-apply-sass.md absPath of file >>> MarkdownRemark","html":"<h2>환경</h2>\n<ul>\n<li>Create-react-app (CRA)</li>\n<li>SCSS 로 적용</li>\n</ul>\n<h2>적용법</h2>\n<h3>react 설정 eject &#x26; sass 패키지 설치</h3>\n<ol>\n<li><code>$ npm run eject</code> 를 실행한다.\n해당 명령어는 <code>node_modules/react-scripts</code>에 위치하던 환경설정을 프로젝트 루트 경로로 이동시켜 상세한 환경설정이 가능하도록 한다.</li>\n<li>\n<p><code>npm install --save node-sass sass-loader</code>  두개의 패키지를 설치한다.</p>\n<ul>\n<li>node-sass : sass 코드를 css 코드로 변환</li>\n<li>sass-loader : webpack에서 sass 파일을 읽는 역할.</li>\n</ul>\n</li>\n</ol>\n<h3>코드 수정</h3>\n<h4><code>config/webpack.config.dev.js</code></h4>\n<p>file-loader 키워드를 찾아 아래 코드에서 exclude 배열에 <code>/\\.scss$/</code>를 추가해준다.</p>\n<pre><code class=\"language-javascript\">{\n  // exclude: [/\\.js$/, /\\.html$/, /\\.json$/] \n  exclude: [/\\.js$/, /\\.html$/, /\\.json$/, /\\.scss$/],\n    loader: require.resolve('file-loader'),\n      options: {\n        name: 'static/media/[name].[hash:8].[ext]',\n      },\n},\n</code></pre>\n<p><code>test: /\\.css$/</code> 키워드를 찾아 아래 코드를 수정한다.</p>\n<ul>\n<li><code>test: /\\.css$/</code>를 <code>test: /\\.scss$/</code>로 수정한다.</li>\n<li>postcss-loader 로더 아래 sass-loader 로더 코드를 추가한다</li>\n</ul>\n<pre><code class=\"language-javascript\">module : {\n  //...\n    {\n      // test: /\\.css$/,\n      test: /\\.scss$/,\n        use: [\n          require.resolve('style-loader'),\n          {\n            loader: require.resolve('css-loader'),\n            options: {\n              importLoaders: 1,\n            },\n          },\n          {\n            loader: require.resolve('postcss-loader'),\n            options: {\n              ident: 'postcss',\n              plugins: () => [\n                require('postcss-flexbugs-fixes'),\n                autoprefixer({\n                  browsers: [\n                    '>1%',\n                    'last 4 versions',\n                    'Firefox ESR',\n                    'not ie &#x3C; 9',\n                  ],\n                  flexbox: 'no-2009',\n                }),\n              ],\n            },\n          },\n          // 아래 4줄 코드 추가\n          {\n            loader: require.resolve('sass-loader'),\n            options: {}\n          }\n          // \n        ],\n    },\n    /...\n}\n</code></pre>\n<h4><code>config/webpack.config.prod.js</code></h4>\n<p>위 dev 설정 파일과 비슷하게 수정한다.</p>\n<ul>\n<li>file-loader 키워드를 찾아 아래 코드에서 exclude 배열에 <code>/\\.scss$/</code>를 추가해준다.</li>\n<li>\n<p><code>test: /\\.css$/</code> 키워드를 찾아 코드를 수정한다.</p>\n<ul>\n<li><code>test: /\\.css$/</code>를 <code>test: /\\.scss$/</code>로 수정한다.</li>\n<li>postcss-loader 로더 아래 sass-loader 로더 코드를 추가한다</li>\n</ul>\n</li>\n</ul>\n<h2>사용</h2>\n<p>기존의 css 파일을 scss로 확장자 변경하여 사용할 수 있다.</p>\n<p>또한 설정 변경 전 <code>npm start</code>가 실행중이었다면 새로 시작해주어야한다.</p>\n<p><a href=\"https://sass-guidelin.es/ko/\">SASS Documentation (Ko)</a></p>\n<p><a href=\"http://sass-lang.com/\">SASS Official Site</a></p>\n<hr>\n<h2>Reference</h2>\n<p><a href=\"https://velopert.com/3447\">리액트 컴포넌트 스타일링 – CSS Module / Sass / styled-components</a></p>","frontmatter":{"title":"React 프로젝트에 SASS 적용하기","date":"November 08, 2017"}}},"pageContext":{"slug":"/js-react-apply-sass/","previous":{"fields":{"slug":"/php-cookie-session/"},"frontmatter":{"title":"PHP Cookie, Session","tags":["php"]}},"next":{"fields":{"slug":"/js-hoisting/"},"frontmatter":{"title":"자바스크립트 호이스팅(Hoisting)","tags":["javascript"]}}}}