{"data":{"site":{"siteMetadata":{"title":"devLog","author":"Junho Baik"}},"markdownRemark":{"id":"/Users/junhobaik/Development/junhobaik.github.io/_posts/2017/2017-06-29-js-es6-spread-operator.md absPath of file >>> MarkdownRemark","html":"<p>쉽게 말해 배열을 펼쳐주는 역할이다. ''[ ]''를 떼어낸다고 생각하면 쉽다.<br>\n배열을 바꾸지 않고 새로운 값을 복사, 배열을 합치거나 배열을 펼쳐진 상태로 파라메터로 전달 등의 활용이 가능하다.</p>\n<pre><code class=\"language-javascript\">let a = [1,\"\",undefined,NaN,null];\nlet b = [...a];\n\nconsole.log(a); //[1, \"\", undefined, NaN, null]\nconsole.log(b); //[1, \"\", undefined, NaN, null]\n\nconsole.log(a === b); //false\n// 새로운 배열로 메모리에 들어간 복사를 한 형태, \n// concat을 이용한 것과 같은 결과이다.\n// 배열을 바꾸지 않고 새로운 값을 복사할 수 있는 방법.\n</code></pre>\n<pre><code class=\"language-javascript\">let c = [...a, 'add'];\nconsole.log(c); //[1, \"\", undefined, NaN, null, \"add\"]\n// 기존에 복잡한 과정을 거쳐했던 것을 간단하게 \n// 이러한 방식으로 배열 앞뒤에 새로운 것을 추가할 수 있다.\n</code></pre>\n<pre><code class=\"language-javascript\">function sum(a,b,c){\n  return a+b+c;\n}\n\nlet s = [1,2,3];\n\nconsole.log(sum.apply(null,s)); \n// 기존 방식\n\nconsole.log(sum(...s)); \n// spread operator를 이용한 새로운 방식\n</code></pre>","frontmatter":{"title":"자바스크립트 ES6 Spread operator, 펼침 연산자","date":"June 29, 2017"}}},"pageContext":{"slug":"/js-es6-spread-operator/","previous":{"fields":{"slug":"/js-es6-string-methods/"},"frontmatter":{"title":"자바스크립트 ES6 String Methods","tags":["javascript","ES6"]}},"next":{"fields":{"slug":"/js-es6-from/"},"frontmatter":{"title":"자바스크립트 ES6 from","tags":["javascript","ES6"]}}}}